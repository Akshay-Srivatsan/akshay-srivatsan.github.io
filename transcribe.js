let to_grantha = {
  'рдБ': 'ЁСМБ', 'рдВ': 'ЁСМВ', 'рдГ': 'ЁСМГ',
  'рдЕ': 'ЁСМЕ', 'рдЖ': 'ЁСМЖ', 'рдЗ': 'ЁСМЗ', 'рдИ': 'ЁСМИ', 'рдЙ': 'ЁСМЙ', 'рдК': 'ЁСМК',
  'рдЛ': 'ЁСМЛ', 'рдМ': 'ЁСММ', 'рдП': 'ЁСМП', 'рдР': 'ЁСМР', 'рдУ': 'ЁСМУ', 'рдФ': 'ЁСМФ',
  ' реЙ': 'ЁСМ╛', 'реЖ': 'ЁСНЗ', 'реК': 'ЁСНЛ', 'реЕ': 'ЁСМ╛', 'рдС': 'ЁСМЖ', 'рдО': 'ЁСМП', 'рдТ': 'ЁСМУ', 'рдН': 'ЁСМЖ',
  'рдХ': 'ЁСМХ', 'рдЦ': 'ЁСМЦ', 'рдЧ': 'ЁСМЧ', 'рдШ': 'ЁСМШ', 'рдЩ': 'ЁСМЩ',
  'рдЪ': 'ЁСМЪ', 'рдЫ': 'ЁСМЫ', 'рдЬ': 'ЁСМЬ', 'рдЭ': 'ЁСМЭ', 'рдЮ': 'ЁСМЮ',
  'рдЯ': 'ЁСМЯ', 'рда': 'ЁСМа', 'рдб': 'ЁСМб', 'рдв': 'ЁСМв', 'рдг': 'ЁСМг',
  'рдд': 'ЁСМд', 'рде': 'ЁСМе', 'рдж': 'ЁСМж', 'рдз': 'ЁСМз', 'рди': 'ЁСМи',
  'рдк': 'ЁСМк', 'рдл': 'ЁСМл', 'реЮ': 'ЁСМлЁСМ╝', 'рдм': 'ЁСМм', 'рдн': 'ЁСМн', 'рдо': 'ЁСМо',
  'рдп': 'ЁСМп', 'рд░': 'ЁСМ░', 'рд▓': 'ЁСМ▓', 'рд│': 'ЁСМ│', 'рд╡': 'ЁСМ╡', 'рд┤': 'ЁСМ│ЁСМ╝',
  'рд╢': 'ЁСМ╢', 'рд╖': 'ЁСМ╖', 'рд╕': 'ЁСМ╕', 'рд╣': 'ЁСМ╣',
  'рд╝': 'ЁСМ╝', 'рд╜': 'ЁСМ╜',
  'рд╛': 'ЁСМ╛', 'рд┐': 'ЁСМ┐', 'реА': 'ЁСНА', 'реБ': 'ЁСНБ', 'реВ': 'ЁСНВ',
  'реГ': 'ЁСНГ', 'реД': 'ЁСНД', 'реЗ': 'ЁСНЗ', 'реИ': 'ЁСНИ', 'реЛ': 'ЁСНЛ', 'реМ': 'ЁСНМ',
  'реН': 'ЁСНН',
  'реР': 'ЁСНР',
  'реЧ': 'ЁСНЧ',
  'реа': 'ЁСНа', 'реб': 'ЁСНб',
  'рев': 'ЁСНв', 'рег': 'ЁСНг',
  'ред': 'ред', 'рее': 'рее',
  'реж': 'рпж', 'рез': 'рпз', 'реи': 'рпи', 'рей': 'рпй', 'рек': 'рпк', 'рел': 'рпл', 'рем': 'рпм', 'рен': 'рпн', 'рео': 'рпо', 'реп': 'рпп',
};

let to_brahmi = {
  'рдБ': 'ЁСАА', 'рдВ': 'ЁСАБ', 'рдГ': 'ЁСАВ',
  'рдЕ': 'ЁСАЕ', 'рдЖ': 'ЁСАЖ', 'рдЗ': 'ЁСАЗ', 'рдИ': 'ЁСАИ', 'рдЙ': 'ЁСАЙ', 'рдК': 'ЁСАК',
  'рдЛ': 'ЁСАЛ', 'рдМ': 'ЁСАН', 'рдП': 'ЁСАП', 'рдР': 'ЁСАР', 'рдУ': 'ЁСАС', 'рдФ': 'ЁСАТ',
  ' реЙ': 'ЁСА╕', 'реЖ': 'ЁСБВ', 'реК': 'ЁСБД', 'реЕ': 'ЁСА╕', 'рдС': 'ЁСАЖ', 'рдО': 'ЁСАП', 'рдТ': 'ЁСАС', 'рдН': 'ЁСАЖ',
  'рдХ': 'ЁСАУ', 'рдЦ': 'ЁСАФ', 'рдЧ': 'ЁСАХ', 'рдШ': 'ЁСАЦ', 'рдЩ': 'ЁСАЧ',
  'рдЪ': 'ЁСАШ', 'рдЫ': 'ЁСАЩ', 'рдЬ': 'ЁСАЪ', 'рдЭ': 'ЁСАЫ', 'рдЮ': 'ЁСАЬ',
  'рдЯ': 'ЁСАЭ', 'рда': 'ЁСАЮ', 'рдб': 'ЁСАЯ', 'рдв': 'ЁСАа', 'рдг': 'ЁСАб',
  'рдд': 'ЁСАв', 'рде': 'ЁСАг', 'рдж': 'ЁСАд', 'рдз': 'ЁСАе', 'рди': 'ЁСАж', 'рдй': 'ЁСА╖',
  'рдк': 'ЁСАз', 'рдл': 'ЁСАи', 'реЮ': 'ЁСАи', 'рдм': 'ЁСАй', 'рдн': 'ЁСАк', 'рдо': 'ЁСАл',
  'рдп': 'ЁСАм', 'рд░': 'ЁСАн', 'рд▒': 'ЁСА╢', 'рд▓': 'ЁСАо', 'рд│': 'ЁСА┤', 'рд┤': 'ЁСА╡', 'рд╡': 'ЁСАп',
  'рд╢': 'ЁСА░', 'рд╖': 'ЁСА▒', 'рд╕': 'ЁСА▓', 'рд╣': 'ЁСА│',
  'рд╝': '', 'рд╜': 'ЁСАЕ',
  'рд╛': 'ЁСА╕', 'рд┐': 'ЁСА║', 'реА': 'ЁСА╗', 'реБ': 'ЁСА╝', 'реВ': 'ЁСА╜', 'реГ': 'ЁСА╛',
  'реД': 'ЁСА┐', 'реЗ': 'ЁСБВ', 'реИ': 'ЁСБГ', 'реЛ': 'ЁСБД', 'реМ': 'ЁСБЕ',
  'реН': 'ЁСБЖ',
  'реа': 'ЁСАМ', 'реб': 'ЁСАО', 'рев': 'ЁСБА', 'рег': 'ЁСББ',
  'ред': 'ЁСБЗ', 'рее': 'ЁСБИ',
  'реж': 'ЁСБж', 'рез': 'ЁСБз', 'реи': 'ЁСБи', 'рей': 'ЁСБй', 'рек': 'ЁСБк', 'рел': 'ЁСБл', 'рем': 'ЁСБм', 'рен': 'ЁСБн', 'рео': 'ЁСБо', 'реп': 'ЁСБп',
};

let to_tamil = {
  'рдБ': 'роВ', 'рдВ': 'роВ', 'рдГ': 'ЁСМГ',
  'рдЕ': 'роЕ', 'рдЖ': 'роЖ', 'рдЗ': 'роЗ', 'рдИ': 'роИ', 'рдЙ': 'роЙ', 'рдК': 'роК', 'рдЛ': 'ро░рпБ\'',
  'рдМ': 'ро▓рпБ\'', 'рдП': 'роП', 'рдР': 'роР', 'рдУ': 'роУ', 'рдФ': 'роФ',
  ' реЙ': 'ро╛', 'реЖ': 'рпЖ', 'реК': 'рпК', 'реЕ': 'ро╛', 'рдС': 'роЖ', 'рдО': 'роО', 'рдТ': 'роТ', 'рдН': 'роЖ',
  'рдХ': 'роХ', 'рдЦ': 'роХ┬▓', 'рдЧ': 'роХ┬│', 'рдШ': 'роХтБ┤', 'рдЩ': 'роЩ',
  'рдЪ': 'роЪ', 'рдЫ': 'роЪ┬▓', 'рдЬ': 'роЬ', 'рдЭ': 'роЬ┬▓', 'рдЮ': 'роЮ',
  'рдЯ': 'роЯ', 'рда': 'роЯ┬▓', 'рдб': 'роЯ┬│', 'рдв': 'роЯтБ┤', 'рдг': 'рог',
  'рдд': 'род', 'рде': 'род┬▓', 'рдж': 'род┬│', 'рдз': 'родтБ┤', 'рди': 'рои', 'рдй': 'рой',
  'рдк': 'рок', 'рдл': 'рок┬▓', 'реЮ': 'роГрок', 'рдм': 'рок┬│', 'рдн': 'роктБ┤', 'рдо': 'роо',
  'рдп': 'роп', 'рд░': 'ро░', 'рд▒': 'ро▒', 'рд▓': 'ро▓', 'рд│': 'ро│', 'рд┤': 'ро┤', 'рд╡': 'ро╡',
  'рд╢': 'ро╢', 'рд╖': 'ро╖', 'рд╕': 'ро╕', 'рд╣': 'ро╣',
  'рд╝': '', 'рд╜': 'роЕ',
  'рд╛': 'ро╛', 'рд┐': 'ро┐', 'реА': 'рпА', 'реБ': 'рпБ', 'реВ': 'рпВ',
  'реГ': 'рпНро░рпБ\'', 'реД': 'рпНро░рпВ\'', 'реЗ': 'рпЗ', 'реИ': 'рпИ', 'реЛ': 'рпЛ', 'реМ':'рпМ',
  'реН': 'рпН',
  'реа': 'ро░рпВ\'', 'реб': 'ро▓рпВ\'', 'рев': 'рпНро▓рпБ\'', 'рег': 'рпНро▓рпВ\'',
 'ред': '.', 'рее': 'ЁС┐┐',
  'реж': 'рпж', 'рез': 'рпз', 'реи': 'рпи', 'рей': 'рпй', 'рек': 'рпк', 'рел': 'рпл', 'рем': 'рпм', 'рен': 'рпн', 'рео': 'рпо', 'реп': 'рпп',
};

let to_latin = {
  'рдВ': 'с╣Г', 'тЧМрдБ': 'm╠Р', 'рдГ': 'с╕е',
  'рдЕ': 'a', 'рдЖ': '─Б', 'рдЗ': 'i', 'рдИ': '─л', 'рдЙ': 'u', 'рдК': '┼л',
  'рдЛ': 'r╠е', 'рдМ': 'l╠е', 'рдП': '─У', 'рдР': 'ai', 'рдУ': '┼Н', 'рдФ': 'au',
  ' реЙ': '\b├┤', 'реЖ': '\be', 'реК': '\bo', 'реЕ': '\b├к', 'рдС': '├┤', 'рдО': 'e', 'рдТ': 'o', 'рдН': '├к',
  'рдХ': 'ka', 'рдЦ': 'kha', 'рдЧ': 'ga', 'рдШ': 'gha', 'рдЩ': 'с╣Еa',
  'рдЪ': 'ca', 'рдЫ': 'cha', 'рдЬ': 'ja', 'рдЭ': 'jha', 'рдЮ': '├▒a',
  'рдЯ': 'с╣нa', 'рда': 'с╣нha', 'рдб': 'с╕Нa', 'рдв': 'с╕Нha', 'рдг': 'с╣Зa',
  'рдд': 'ta', 'рде': 'tha', 'рдж': 'da', 'рдз': 'dha', 'рди': 'na', 'рдй': 'с╣Йa',
  'рдк': 'pa', 'рдл': 'pha', 'реЮ': 'fa', 'рдм': 'ba', 'рдн': 'bha', 'рдо': 'ma',
  'рдп': 'ya', 'рд░': 'ra', 'рд▒': 'с╣Яa', 'рд▓': 'la', 'рд│': 'с╕╖a', 'рд┤': 'с╕╗a', 'рд╡': 'va',
  'рд╢': '┼Ыa', 'рд╖': 'с╣гa', 'рд╕': 'sa', 'рд╣': 'ha',
  'рд╝': '', 'рд╜': 'a',
  'рд╛': '\b─Б', 'рд┐': '\bi', 'реА': '\b─л', 'реБ': '\bu', 'реВ': '\b┼л',
  'реГ': '\br╠е', 'реД': '\br╠е╠Д', 'реЗ': '\b─У', 'реИ': '\bai', 'реЛ': '\b┼Н', 'реМ': '\bau',
  'реН': '\b',
  'реа': 'r╠е╠Д', 'реб': 'l╠е╠Д', 'рев': '\bl╠е', 'рег': '\bl╠е╠Д',
  'ред': '.', 'рее': '.',
  'реж': '0', 'рез': '1', 'реи': '2', 'рей': '3', 'рек': '4', 'рел': '5', 'рем': '6', 'рен': '7', 'рео': '8', 'реп': '9',
};

let to_ipa = {
  'тЧМрдБ': '╠Г', 'рдВ': '╠Г', 'рдГ': 'h',
  'рдЕ': '╔Р', 'рдЖ': 'a╦Р', 'рдЗ': '╔к', 'рдИ': 'i╦Р', 'рдЙ': '╩К', 'рдК': 'u:',
  'рдЛ': 'r╠й', 'рдМ': 'l╠й', 'рдП': 'e╦Р', 'рдР': '╔Р╦Рi╠п', 'рдУ': 'o╦Р', 'рдФ': '╔Р╦Рu╠п',
  ' реЙ': '\b╔Ф', 'реЖ': '\be', 'реК': '\bo', 'реЕ': '\b├ж', 'рдС': '╔Ф', 'рдО': 'e', 'рдТ': 'o', 'рдН': '├ж',
  'рдХ': 'k╔Р', 'рдЦ': 'k╩▒╔Р', 'рдЧ': 'g╔Р', 'рдШ': 'g╩▒╔Р', 'рдЩ': '┼Л╔Р',
  'рдЪ': 't╔Х╔Р', 'рдЫ': 't╔Х╩▒╔Р', 'рдЬ': 'd╩С╔Р', 'рдЭ': 'd╩С╩▒╔Р', 'рдЮ': '╔▓╔Р',
  'рдЯ': '╩И╔Р', 'рда': '╩И╩▒╔Р', 'рдб': '╔Ц╔Р', 'рдв': '╔Ц╩▒╔Р', 'рдг': '╔│╔Р',
  'рдд': 't╔Р', 'рде': 't╩▒╔Р', 'рдж': 'd╔Р', 'рдз': 'd╩▒╔Р', 'рди': 'n╔Р', 'рдй': 'n╠к╔Р',
  'рдк': 'p╔Р', 'рдл': 'p╩▒╔Р', 'реЮ': 'fa', 'рдм': 'b╔Р', 'рдн': 'b╩▒╔Р', 'рдо': 'm╔Р',
  'рдп': 'j╔Р', 'рд░': '╔╛╔Р', 'рд▒': 'r╔Р', 'рд▓': 'l╔Р', 'рд│': '╔н╔Р', 'рд┤': '╔╗╔Р', 'рд╡': '╩Л╔Р',
  'рд╢': '╔Х╔Р', 'рд╖': '╩В╔Р', 'рд╕': 's╔Р', 'рд╣': '╔ж╔Р',
  'рд╝': '', 'рд╜': '╔Р',
  'рд╛': '\ba╦Р', 'рд┐': '\b╔к', 'реА': '\bi╦Р', 'реБ': '\b╩К', 'реВ': '\bu╦Р',
  'реГ': '\br╠й', 'реД': '\br╠й╦Р', 'реЗ': '\be╦Р', 'реИ': '\b╔Р╦Рi╠п', 'реЛ': '\bo╦Р', 'реМ': '\b╔Р╦Рu╠п',
  'реН': '\b',
  'реа': 'r╠й╦Р', 'реб': 'l╠й╦Р', 'рев': '\bl╠й', 'рег': '\bl╠й╦Р',
  'ред': '.', 'рее': '.',
  'реж': '0', 'рез': '1', 'реи': '2', 'рей': '3', 'рек': '4', 'рел': '5', 'рем': '6', 'рен': '7', 'рео': '8', 'реп': '9',
};

function fixup_string_in_tamil(source) {
  let superscripts = "┬▓┬│тБ┤";
  let diacritics = "рпНро╛ро┐рпАрпБрпВрпЖрпЗрпКрпЛрпИрпМ";
  let chars = Array.from(source);
  let n = source.length;
  for (let i = 0; i < n; i++) {
    let c = chars[i];
    if (superscripts.indexOf(c) !== -1) {
      let d = chars[i + 1];
      if (diacritics.indexOf(d) !== -1) {
        chars[i + 1] = c;
        chars[i] = d;
      }
    }
    if (c === "рои" && i > 0) {
      if (chars[i - 1] !== " ") {
        chars[i] = "рой";
      }
    }
  }
  return chars.join("");
}

function fixup_string_in_latin(source) {
  return Array.from(source).filter((x, i) => x !== '\b' && source[i+1] !==
    '\b').join("").replace("\fph", "f");
}

function transcribe_string(string, mapping) {
  let chars = [...string];
  chars = chars.map(x => {
    if (x in mapping) {
      return mapping[x];
    } else {
      return x;
    }
  });
  let s = chars.join("");
  if (mapping == to_tamil) {
    return fixup_string_in_tamil(s);
  }
  if (mapping == to_latin || mapping == to_ipa) {
    return fixup_string_in_latin(s);
  }
  return chars.join("");
}

function fixup_string_in_devanagari(s) {
  return s.replace("реЮ",  "\u095e");
}

let originals = new WeakMap();
function transcribe_node(node, mapping) {
  if (node.nodeType === Node.TEXT_NODE) {
    if (!mapping) {
      if (originals.has(node)) {
        node.nodeValue = originals.get(node);
      }
    } else {
      originals.set(node, node.nodeValue);
      node.nodeValue = transcribe_string(fixup_string_in_devanagari(node.nodeValue), mapping);
    }
  } else if (node.nodeType === Node.ELEMENT_NODE) {
    if (node.lang !== "") return;
    for (let i = 0; i < node.childNodes.length; i++) {
      let child = node.childNodes[i];
      transcribe_node(child, mapping);
    }
  }
}

function transcribe(mapping) {
  transcribe_node(document.body, mapping);
  transcribe_node(document.title, mapping);
}

function reset() {
  transcribe(null);
}

function set_script(name) {
  document.getElementById("grantha-name").style.display = "inline";
  document.getElementById("devanagari-name").style.display = "inline";
  document.getElementById("brahmi-name").style.display = "inline";
  document.getElementById("tamil-name").style.display = "inline";
  document.getElementById("latin-name").style.display = "inline";
  document.getElementById("ipa-name").style.display = "inline";

  document.getElementById(name + "-name").style.display = "none";
  script.selectedIndex = ["devanagari", "grantha", "brahmi", "tamil", "latin", "ipa"].indexOf(name);
}

function devanagari() {
  reset();
  document.documentElement.lang = "sa";
  window.history.replaceState("", document.title, window.location.pathname);
  set_script("devanagari");
}

function grantha() {
  reset();
  transcribe(to_grantha);
  document.documentElement.lang = "sa-Gran";
  window.history.replaceState("", document.title, window.location.pathname + "?grantha");
  set_script("grantha");
}

function brahmi() {
  reset();
  transcribe(to_brahmi);
  document.documentElement.lang = "sa-Brah";
  window.history.replaceState("", document.title, window.location.pathname + "?brahmi");
  set_script("brahmi");
}

function tamil() {
  reset();
  transcribe(to_tamil);
  document.documentElement.lang = "sa-Taml";
  window.history.replaceState("", document.title, window.location.pathname + "?tamil");
  set_script("tamil");
}

function latin() {
  reset();
  transcribe(to_latin);
  document.documentElement.lang = "sa-Latn";
  window.history.replaceState("", document.title, window.location.pathname + "?latin");
  set_script("latin");
}

function ipa() {
  reset();
  transcribe(to_ipa);
  document.documentElement.lang = "sa-phonipa";
  window.history.replaceState("", document.title, window.location.pathname + "?ipa");
  set_script("ipa");
}
